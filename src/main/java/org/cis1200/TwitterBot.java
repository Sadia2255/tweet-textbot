package org.cis1200;

import java.util.ArrayList;
import java.util.List;
import java.util.Iterator;

public class TwitterBot {

    private final MarkovChain mc;

    /**
     * @param trainingData - cleaned data from which to construct the TwitterBot
     *                     MarkovModel
     */
    public TwitterBot(List<List<String>> trainingData) {
        mc = new MarkovChain(trainingData);
    }

     /*
     * @param ng a source of numbers for walking through the TwitterBot's
     *           MarkovChain
     * @return the tweet generated by following that walk
     */

    public String generateTweet(NumberGenerator ng) {
        StringBuilder tweet = new StringBuilder();
        Iterator<String> walk = mc.getWalk(ng);

        String previousToken = null;

        while (walk.hasNext()) {
            String token = walk.next();

            if (token.equals(MarkovChain.END_TOKEN)) {
                break;
            }

            if (previousToken != null &&
                    !previousToken.matches(TweetParser.PUNCTUATION)
                    && !token.matches(TweetParser.PUNCTUATION)) {
                tweet.append(' ');
            }

            tweet.append(token);
            previousToken = token;
        }

        return tweet.toString();
    }

    /**
     * Generates a random tweet. This function is implemented for you.
     *
     * @return a randomly generated tweet
     */
    public String generateTweet() {
        return generateTweet(new RandomNumberGenerator());
    }

    /**
     * Generates a list containing a specified number of randomly generated tweets.
     *
     * This function is implemented for you.
     *
     * @param numTweets
     * @return a list of random tweets of length {@code numTweets}
     */
    public List<String> generateRandomTweets(int numTweets) {
        List<String> tweets = new ArrayList<>();
        while (numTweets > 0) {
            tweets.add(generateTweet());
            numTweets--;
        }
        return tweets;
    }

}
